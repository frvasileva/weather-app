{"version":3,"sources":["components/weather-by-day/weather-by-hours.js","components/weather-by-day/weather-by-day-details.js","components/weather-by-day/weather-by-day.js","components/current-weather/current-weather-by-hour.js","components/current-weather/current-weather.js","components/search-location/search-by-location.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherByHours","props","element","isExpanded","day","avghumidity","daily_chance_of_rain","daily_chance_of_snow","WeatherByDayDetails","useState","setExpanded","isExpandedIcon","setExpandedIcon","className","date","src","condition","icon","alt","text","mintemp_c","maxtemp_c","onClick","WeatherByDay","forecast","forecastDays","map","CurrentWeatherByHour","hours","forecastHours","forecastday","hour","time","split","temp_c","time_epoch","CurrentWeather","locationBrowser","useLocation","apiUrl","URLSearchParams","search","get","weather","setWeather","useEffect","fetch","then","response","json","data","location","name","country","current","feelslike_c","SearchByLocation","history","useHistory","searchTerm","setLocation","isFormValid","setFormIsValid","console","log","onSubmit","e","preventDefault","undefined","push","type","placeholder","value","onChange","target","trim","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cd1d3b3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./weather-by-day.scss\";\r\n\r\nexport const WeatherByHours = (props) => {\r\n  var element = props.element;\r\n\r\n  return (\r\n    <div>\r\n      {props.isExpanded && <p>Humidity: {element.day.avghumidity} %</p>}\r\n      {props.isExpanded && <p>Chance of rain: {element.day.daily_chance_of_rain} %</p>}\r\n      {props.isExpanded && <p>Chance of snow: {element.day.daily_chance_of_snow} %</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherByHours;\r\n","import React, { useState } from \"react\";\r\nimport WeatherByHours from \"./weather-by-hours\";\r\n\r\nimport \"./weather-by-day.scss\";\r\n\r\nexport const WeatherByDayDetails = (props) => {\r\n  var element = props.element;\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const [isExpandedIcon, setExpandedIcon] = useState(\r\n    \"fas fa-chevron-circle-down\"\r\n  );\r\n\r\n  const togglePanel = () => {\r\n    setExpanded(!isExpanded);\r\n    if (isExpanded) {\r\n      setExpandedIcon(\"fas fa-chevron-circle-down\");\r\n    } else {\r\n      setExpandedIcon(\"fas fa-chevron-circle-up\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-4 col-sm-4\">\r\n          <span className=\"day-of-week\">{element.date}</span>\r\n        </div>\r\n        <div className=\"col-3 col-sm-2\">\r\n          <img\r\n            src={element.day.condition.icon}\r\n            alt={element.day.condition.text}\r\n            className=\"small-icon\"\r\n          />\r\n        </div>\r\n        <div className=\"col-4 col-sm-3\">\r\n          <span className=\"daily-temperatures\">\r\n            {element.day.mintemp_c} / {element.day.maxtemp_c} °C\r\n          </span>\r\n        </div>\r\n        <div className=\"col-1 col-sm-3\">\r\n          <div className=\"expander-wrapper\">\r\n            <i className={isExpandedIcon} onClick={togglePanel}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md\">\r\n          <WeatherByHours isExpanded={isExpanded} element={element} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherByDayDetails;\r\n","import React from \"react\";\r\nimport WeatherByDayDetails from \"./weather-by-day-details\";\r\n\r\nimport \"./weather-by-day.scss\";\r\n\r\nexport const WeatherByDay = (props) => {\r\n  var forecast = props.forecastDays;\r\n\r\n  if (!forecast) return <div>Loading ...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md\">\r\n          <ul className=\"list-group-flush\">\r\n            {forecast.map((element) => (\r\n              <li className=\"list-group-item\" key={element.date}>\r\n                <WeatherByDayDetails element={element} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherByDay;\r\n","import React from \"react\";\r\n\r\nexport const CurrentWeatherByHour = (props) => {\r\n  var hours = props.forecastHours.forecastday[0].hour;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md\">\r\n          <ul className=\"list-group-flush\">\r\n            {hours.map((element) => (\r\n              <li className=\"list-group-item\" key={element.time_epoch}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-8\">\r\n                    {\" \"}\r\n                    {element.time.split(\" \")[1]} -{\" \"}\r\n                    <strong>{element.temp_c} °C </strong>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <img\r\n                      className=\"icon\"\r\n                      src={element.condition.icon}\r\n                      alt={element.condition.text}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeatherByHour;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport WeatherByDay from \"../weather-by-day/weather-by-day\";\r\nimport CurrentWeatherByHour from \"./current-weather-by-hour\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport \"./current-weather.scss\";\r\n\r\nexport const CurrentWeather = (props) => {\r\n  const locationBrowser = useLocation();\r\n  const searchParams = new URLSearchParams(locationBrowser.search);\r\n  var searchTermFromparam = searchParams.get(\"term\") ?? \"\";\r\n  \r\n  const apiUrl =\r\n    \"//api.weatherapi.com/v1/forecast.json?key=d399b4c72a3e4a0ba5b102144202710&q=\" +\r\n    searchTermFromparam +\r\n    \"&days=5\";\r\n\r\n  const [weather, setWeather] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setWeather(data);\r\n      });\r\n  }, [apiUrl]);\r\n\r\n  if (!weather) return <div>Loading ...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md\">\r\n            <div className=\"main-current-weather-info\">\r\n              <div className=\"location\">\r\n                {weather.location.name}, {weather.location.country}\r\n              </div>\r\n\r\n              <div className=\"temperature\"> {weather.current.temp_c} °C</div>\r\n              <div className=\"temperature-feels-like\">\r\n                Feels like {weather.current.feelslike_c} °C\r\n              </div>\r\n              <img\r\n                src={weather.current.condition.icon}\r\n                alt={weather.current.condition.text}\r\n              ></img>\r\n              <div className=\"weather-condition-text\">\r\n                {weather.current.condition.text}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <WeatherByDay forecastDays={weather.forecast.forecastday} />\r\n        <CurrentWeatherByHour forecastHours={weather.forecast} />\r\n      </div>\r\n      )\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport CurrentWeather from \"../current-weather/current-weather\";\r\nimport \"./search-by-location.scss\";\r\n\r\n\r\nexport const SearchByLocation = () => {\r\n  const locationBrowser = useLocation();\r\n  const history = useHistory();\r\n\r\n  const searchParams = new URLSearchParams(locationBrowser.search);\r\n  var searchTerm = searchParams.get(\"term\") ?? \"\";\r\n\r\n  const [location, setLocation] = useState(searchTerm);\r\n  const [isFormValid, setFormIsValid] = useState(true);\r\n\r\n  const changeLocation = (e) => {\r\n    setLocation(e.target.value);\r\n    if (e.target.value !== undefined && e.target.value.trim() !== \"\")\r\n      setFormIsValid(true);\r\n  };\r\n\r\n  const searchByLocation = (e) => {\r\n    e.preventDefault();\r\n    if (location === undefined || location === \"\") {\r\n      setFormIsValid(false);\r\n    } else {\r\n      setFormIsValid(true);\r\n      history.push(`?term=${location}`);\r\n    }\r\n  };\r\n\r\n  console.log(location);\r\n  return (\r\n    <div>\r\n      <div className=\"search-by-location-wrapper\">\r\n        <form onSubmit={searchByLocation}>\r\n          <div className=\"form-row\">\r\n            <div className=\"col-8\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-lg\"\r\n                placeholder=\"Search location\"\r\n                value={location}\r\n                onChange={changeLocation}\r\n              />\r\n              {!isFormValid && <span>Choose location</span>}\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <button type=\"submit\" className=\"btn btn-light btn-block btn-lg\">\r\n                Seach\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <CurrentWeather />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchByLocation;\r\n","import { BrowserRouter } from \"react-router-dom\";\n\nimport SearchByLocation from \"./components/search-location/search-by-location\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app-wrapper day\">\n        <header className=\"App-header\"></header>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <SearchByLocation />\n            </div>\n          </div>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}