{"version":3,"sources":["helpers/whatTimeOfDayIs.js","components/current-weather/current-weather-by-hour.js","components/weather-by-day/weather-by-day-tile.js","components/weather-by-day/weather-by-day-details.js","components/weather-by-day/weather-by-day.js","components/current-weather/current-weather.js","components/search-location/search-by-location.js","App.js","reportWebVitals.js","index.js"],"names":["whatTimeOfDayIs","isDawn","hours","Date","getHours","isDay","isSusnetDusk","isNight","CurrentWeatherByHour","props","className","map","element","time","split","src","condition","icon","alt","text","temp_c","toFixed","WeatherByDayTile","isExpanded","title","day","avghumidity","daily_chance_of_rain","daily_chance_of_snow","hour","WeatherByDayDetails","useState","setExpanded","isExpandedIcon","setExpandedIcon","onClick","date","mintemp_c","maxtemp_c","WeatherByDay","forecast","forecastDays","CurrentWeather","locationBrowser","useLocation","searchTermFromparam","URLSearchParams","search","get","apiUrl","weather","setWeather","getWeather","fetch","then","response","json","data","error","code","undefined","useEffect","interval","setInterval","clearInterval","class","role","location","name","country","current","feelslike_c","last_updated","forecastday","SearchByLocation","history","useHistory","searchTerm","setLocation","isFormValid","setFormIsValid","onSubmit","e","preventDefault","push","type","placeholder","value","onChange","target","trim","App","backgroundCssClass","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.712a94fb.chunk.js","sourcesContent":["var whatTimeOfDayIs = function () {\r\n  const isDawn = () => {\r\n    const hours = new Date().getHours();\r\n    return hours >= 6 && hours < 8;\r\n  };\r\n\r\n  const isDay = () => {\r\n    const hours = new Date().getHours();\r\n    return hours >= 8 && hours < 18;\r\n  };\r\n\r\n  const isSusnetDusk = function () {\r\n    const hours = new Date().getHours();\r\n    return hours >= 18 && hours < 20;\r\n  };\r\n\r\n  const isNight = function () {\r\n    const hours = new Date().getHours();\r\n    return (hours >= 18 && hours < 23) || (hours >= 0 && hours < 6);\r\n  };\r\n\r\n  return { isDawn, isDay, isSusnetDusk, isNight };\r\n};\r\n\r\nexport default whatTimeOfDayIs;\r\n","import React from \"react\";\r\nimport \"./temperature-by-hours.scss\";\r\n\r\nexport const CurrentWeatherByHour = (props) => {\r\n  var hours = props.hours;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md\">\r\n          <ul className=\"temperature-by-hour-list-wrapper\">\r\n            {hours.map((element) => (\r\n              <li className=\"hour-item\" key={element.time}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md\">\r\n                    <div className=\"item-wrapper\">\r\n                      <p> {element.time.split(\" \")[1]}</p>\r\n                      <img\r\n                        className=\"icon weather-icon\"\r\n                        src={element.condition.icon}\r\n                        alt={element.condition.text}\r\n                      />\r\n                      <p className=\"condition-text-small\">{element.condition.text}</p>\r\n                      <p>\r\n                        <strong>{element.temp_c.toFixed()} Â°C </strong>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeatherByHour;\r\n","import React from \"react\";\r\nimport CurrentWeatherByHour from \"../current-weather/current-weather-by-hour\";\r\n\r\nimport \"./weather-by-day.scss\";\r\n\r\nexport const WeatherByDayTile = (props) => {\r\n  var element = props.element;\r\n\r\n  if (props.isExpanded)\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4 item-wrapper\">\r\n            <span className=\"wi wi-humidity\" title=\"Humidity\"></span>\r\n            {element.day.avghumidity} %\r\n            <span className=\"weather-label-info\">Humidity</span>\r\n          </div>\r\n\r\n          <div className=\"col-4 item-wrapper\">\r\n            <span className=\"wi wi-night-showers\" title=\"Showers\"></span>\r\n            {element.day.daily_chance_of_rain} %\r\n            <span className=\"weather-label-info\">Rain</span>\r\n          </div>\r\n\r\n          <div className=\"col-4 item-wrapper\">\r\n            <span className=\"wi wi-snowflake-cold\" title=\"Snow\"></span>\r\n            {element.day.daily_chance_of_snow} %\r\n            <span className=\"weather-label-info\">Snow</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md\">\r\n            <CurrentWeatherByHour hours={element.hour} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  else return <div></div>;\r\n};\r\n\r\nexport default WeatherByDayTile;\r\n","import React, { useState } from \"react\";\r\nimport WeatherByDayTile from \"./weather-by-day-tile\";\r\n\r\nimport \"./weather-by-day.scss\";\r\n\r\nexport const WeatherByDayDetails = (props) => {\r\n  var element = props.element;\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const [isExpandedIcon, setExpandedIcon] = useState(\r\n    \"fas fa-chevron-circle-down\"\r\n  );\r\n\r\n  const togglePanel = () => {\r\n    setExpanded(!isExpanded);\r\n    if (isExpanded) {\r\n      setExpandedIcon(\"fas fa-chevron-circle-down\");\r\n    } else {\r\n      setExpandedIcon(\"fas fa-chevron-circle-up\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row weather-by-day-row\" onClick={togglePanel}>\r\n        <div className=\"col-md-4 col-4\">\r\n          <span className=\"day-of-week\">{element.date}</span>\r\n        </div>\r\n        <div className=\"col-md-2 col-2\">\r\n          <img\r\n            src={element.day.condition.icon}\r\n            alt={element.day.condition.text}\r\n            className=\"small-icon\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4 col-4\">\r\n          <span className=\"daily-temperatures\">\r\n            {element.day.mintemp_c.toFixed()} / {element.day.maxtemp_c.toFixed()} Â°C\r\n          </span>\r\n        </div>\r\n        <div className=\"col-md-1 col-2\">\r\n          <div className=\"expander-wrapper\">\r\n            <i className={isExpandedIcon}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={isExpanded ? \"row expanded-row\" : \"row\"}>\r\n        <div className=\"col-md\">\r\n          <WeatherByDayTile\r\n            isExpanded={isExpanded}\r\n            element={element}\r\n            className=\"weather-by-hours\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherByDayDetails;\r\n","import React from \"react\";\r\nimport WeatherByDayDetails from \"./weather-by-day-details\";\r\n\r\nimport \"./weather-by-day.scss\";\r\n\r\nexport const WeatherByDay = (props) => {\r\n  var forecast = props.forecastDays;\r\n\r\n  if (!forecast) return <div>Loading ...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md\">\r\n          <ul className=\"list-group-flush\">\r\n            {forecast.map((element) => (\r\n              <li className=\"list-group-item\" key={element.date}>\r\n                <WeatherByDayDetails element={element} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherByDay;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport WeatherByDay from \"../weather-by-day/weather-by-day\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport \"./current-weather.scss\";\r\n\r\nexport const CurrentWeather = () => {\r\n  const locationBrowser = useLocation();\r\n  const searchParams = new URLSearchParams(locationBrowser.search);\r\n  var searchTermFromparam = searchParams.get(\"term\") ?? \"Sofia\";\r\n\r\n  var apiUrl = \"\";\r\n\r\n  if (searchTermFromparam !== \"\") {\r\n    apiUrl =\r\n      \"//api.weatherapi.com/v1/forecast.json?key=d399b4c72a3e4a0ba5b102144202710&q=\" +\r\n      searchTermFromparam +\r\n      \"&days=5\";\r\n  }\r\n\r\n  const [weather, setWeather] = useState(null);\r\n\r\n  const getWeather = () => {\r\n    fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error && data.error.code === 1006) {\r\n          setWeather(undefined);\r\n        } else {\r\n          setWeather(data);\r\n        }\r\n      });\r\n  };\r\n\r\n  var setIntervalValue = 100000;\r\n  useEffect(() => {\r\n    getWeather();\r\n\r\n    const interval = setInterval(() => {\r\n      getWeather();\r\n    }, setIntervalValue);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [apiUrl]);\r\n\r\n  if (typeof weather === \"undefined\")\r\n    return (\r\n      <div>\r\n        <div class=\"alert alert-secondary\" role=\"alert\">\r\n          No such location!\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (!weather) return <div>Loading ...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md\">\r\n            <div className=\"main-current-weather-info\">\r\n              <div className=\"location\">\r\n                {weather.location.name}, {weather.location.country}\r\n              </div>\r\n\r\n              <div className=\"temperature\"> {weather.current.temp_c} Â°C</div>\r\n              <div className=\"temperature-feels-like\">\r\n                Feels like {weather.current.feelslike_c} Â°C\r\n              </div>\r\n              <img\r\n                src={weather.current.condition.icon}\r\n                alt={weather.current.condition.text}\r\n              ></img>\r\n              <div className=\"weather-condition-text\">\r\n                {weather.current.condition.text}\r\n              </div>\r\n              <div className=\"last-updated-info\">\r\n                Last updated: {weather.current.last_updated}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <WeatherByDay forecastDays={weather.forecast.forecastday} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport CurrentWeather from \"../current-weather/current-weather\";\r\nimport \"./search-by-location.scss\";\r\n\r\nexport const SearchByLocation = () => {\r\n  const locationBrowser = useLocation();\r\n  const history = useHistory();\r\n\r\n  const searchParams = new URLSearchParams(locationBrowser.search);\r\n  var searchTerm = searchParams.get(\"term\") ?? \"\";\r\n\r\n  const [location, setLocation] = useState(searchTerm);\r\n  const [isFormValid, setFormIsValid] = useState(true);\r\n\r\n  const changeLocation = (e) => {\r\n    setLocation(e.target.value);\r\n    if (e.target.value !== undefined && e.target.value.trim() !== \"\")\r\n      setFormIsValid(true);\r\n  };\r\n\r\n  const searchByLocation = (e) => {\r\n    e.preventDefault();\r\n    if (location === undefined || location === \"\") {\r\n      setFormIsValid(false);\r\n    } else {\r\n      setFormIsValid(true);\r\n      history.push(`?term=${location}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search-by-location-wrapper\">\r\n        <form onSubmit={searchByLocation}>\r\n          <div className=\"form-row\">\r\n            <div className=\"col-8\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-lg\"\r\n                placeholder=\"Search location\"\r\n                value={location}\r\n                onChange={changeLocation}\r\n              />\r\n              {!isFormValid && <span>Choose location</span>}\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <button type=\"submit\" className=\"btn btn-light btn-block btn-lg\">\r\n                Seach\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <CurrentWeather />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchByLocation;\r\n","import { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport whatTimeOfDayIs from \"./helpers/whatTimeOfDayIs\";\r\nimport SearchByLocation from \"./components/search-location/search-by-location\";\r\n\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  var hour = whatTimeOfDayIs();\r\n  var backgroundCssClass = \"dawn\";\r\n\r\n  if (hour.isDay()) backgroundCssClass = \"day\";\r\n  if (hour.isSusnetDusk()) backgroundCssClass = \"sunset-dusk\";\r\n  if (hour.isNight()) backgroundCssClass = \"night\";\r\n  backgroundCssClass = \"wrapper \" + backgroundCssClass;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className={backgroundCssClass}>\r\n        <header className=\"App-header\"></header>\r\n        <div className=\"container\">\r\n          <div className=\"app-wrapper\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <SearchByLocation />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}