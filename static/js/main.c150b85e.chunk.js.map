{"version":3,"sources":["components/current-weather/current-weather-by-hour.js","components/weather-by-day/weather-by-day-tile.js","components/weather-by-day/weather-by-day-details.js","components/weather-by-day/weather-by-day.js","helpers/airQualityHelper.js","context.js","helpers/weatherTypes.js","components/current-weather/current-weather.js","components/search-location/search-by-location.js","App.js","reportWebVitals.js","index.js"],"names":["CurrentWeatherByHour","props","hours","className","map","element","time","split","src","condition","icon","alt","text","temp_c","toFixed","WeatherByDayTile","chartData","hour","item","x","substr","y","label","style","fontSize","rotation","labelAnchorY","chance_of_rain","humidity","CustomTooltip","payload","active","Math","round","value","isExpanded","title","day","avghumidity","daily_chance_of_rain","daily_chance_of_snow","ResponsiveContainer","width","height","LineChart","data","Line","type","dataKey","dot","stroke","strokeWidth","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","content","WeatherByDayDetails","useState","setExpanded","isExpandedIcon","setExpandedIcon","date","Date","onClick","toLocaleDateString","year","month","mintemp_c","maxtemp_c","WeatherByDay","forecast","forecastDays","UsAirQualityIndexTransformer","index","WeatherContext","React","createContext","weatherType","setWeatherType","WeatherType","weather","toLowerCase","includes","CurrentWeather","locationBrowser","useLocation","searchTermFromparam","URLSearchParams","search","get","apiUrl","setWeather","useContext","getWeather","fetch","then","response","json","error","code","undefined","current","useEffect","interval","setInterval","clearInterval","class","role","location","name","country","feelslike_c","air_quality","wind_kph","last_updated","forecastday","SearchByLocation","history","useHistory","searchTerm","setLocation","isFormValid","setFormIsValid","onSubmit","e","preventDefault","push","placeholder","onChange","target","trim","App","backgroundCssClass","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c150b85e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./temperature-by-hours.scss\";\r\n\r\nexport const CurrentWeatherByHour = (props) => {\r\n  var hours = props.hours;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md\">\r\n          <ul className=\"temperature-by-hour-list-wrapper\">\r\n            {hours.map((element) => (\r\n              <li className=\"hour-item\" key={element.time}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-4 col-3\">\r\n                    <div className=\"item-wrapper\">\r\n                      <p> {element.time.split(\" \")[1]}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-1 col-1 weather-icon-cell-wrapper\">\r\n                    <img\r\n                      className=\"icon weather-icon\"\r\n                      src={element.condition.icon}\r\n                      alt={element.condition.text}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-3 col-4 weather-icon-cell-wrapper\">\r\n                    <p className=\"condition-text-small\">\r\n                      {element.condition.text}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"col-md-4 col-3\">\r\n                    <p className=\"temperature-value\">\r\n                      <strong>{element.temp_c.toFixed()} °C </strong>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeatherByHour;\r\n","import React from \"react\";\r\nimport CurrentWeatherByHour from \"../current-weather/current-weather-by-hour\";\r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport \"./weather-by-day.scss\";\r\n\r\nexport const WeatherByDayTile = (props) => {\r\n  var element = props.element;\r\n\r\n   var chartData = element.hour.map(function (item) {\r\n    return {\r\n      x: item.time.substr(11, 6),\r\n      y: item.temp_c,\r\n      label: item.time.substr(11, 6),\r\n      style: { fontSize: 10 },\r\n      rotation: 34,\r\n      labelAnchorY: item.time.substr(11, 6),\r\n      chance_of_rain: item.chance_of_rain,\r\n      humidity: item.humidity,\r\n      icon: item.condition.icon,\r\n    };\r\n  });\r\n\r\n  function CustomTooltip({ payload, label, active }) {\r\n    if (active) {\r\n      return (\r\n        <div className=\"custom-tooltip\">\r\n          <span className=\"label\">{label} ч. </span>\r\n          <hr />\r\n          <img\r\n            src={payload[0].payload.icon}\r\n            alt=\"weather icon\"\r\n            className=\"weather-icon\"\r\n          />\r\n          <span className=\"value\">{Math.round(payload[0].value)}°C </span>\r\n          <hr />\r\n          <span className=\"desc\">\r\n            {payload[0].payload.chance_of_rain}% Rain\r\n          </span>\r\n          <span className=\"desc\">{payload[0].payload.humidity}% Humidity</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  if (props.isExpanded)\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4 item-wrapper\">\r\n            <span className=\"wi wi-humidity\" title=\"Humidity\"></span>\r\n            <span className=\"item-value\"> {element.day.avghumidity} %</span>\r\n            <span className=\"weather-label-info\">Humidity</span>\r\n          </div>\r\n\r\n          <div className=\"col-4 item-wrapper\">\r\n            <span className=\"wi wi-night-showers\" title=\"Showers\"></span>\r\n            <span className=\"item-value\">\r\n              {element.day.daily_chance_of_rain} %\r\n            </span>\r\n            <span className=\"weather-label-info\">Rain</span>\r\n          </div>\r\n\r\n          <div className=\"col-4 item-wrapper\">\r\n            <span className=\"wi wi-snowflake-cold\" title=\"Snow\"></span>\r\n            <span className=\"item-value\">\r\n              {element.day.daily_chance_of_snow} %\r\n            </span>\r\n            <span className=\"weather-label-info\">Snow</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md\">\r\n            <br></br>\r\n            <br></br>\r\n            <ResponsiveContainer width=\"95%\" height={250}>\r\n              <LineChart data={chartData}>\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"y\"\r\n                  dot={{ stroke: \"#8884d8\", strokeWidth: 2 }}\r\n                  strokeWidth={3}\r\n                />\r\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"x\" />\r\n                <YAxis />\r\n                <Tooltip content={<CustomTooltip />} />{\" \"}\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md\">\r\n            <CurrentWeatherByHour hours={element.hour} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  else return <div></div>;\r\n};\r\n\r\nexport default WeatherByDayTile;\r\n","import React, { useState } from \"react\";\r\nimport WeatherByDayTile from \"./weather-by-day-tile\";\r\n\r\nexport const WeatherByDayDetails = (props) => {\r\n  var element = props.element;\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const [isExpandedIcon, setExpandedIcon] = useState(\r\n    \"fas fa-chevron-circle-down\"\r\n  );\r\n  var date = new Date(element.date);\r\n  var options = {\r\n    year: \"numeric\",\r\n    month: \"numeric\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n\r\n  const togglePanel = () => {\r\n    setExpanded(!isExpanded);\r\n    if (isExpanded) {\r\n      setExpandedIcon(\"fas fa-chevron-circle-down\");\r\n    } else {\r\n      setExpandedIcon(\"fas fa-chevron-circle-up\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row weather-by-day-row\" onClick={togglePanel}>\r\n        <div className=\"col-md-4 col-4\">\r\n          <span className=\"day-of-week\">{date.toLocaleDateString(\"en-US\", options)}</span>\r\n        </div>\r\n        <div className=\"col-md-2 col-2\">\r\n          <img\r\n            src={element.day.condition.icon}\r\n            alt={element.day.condition.text}\r\n            className=\"small-icon\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4 col-4\">\r\n          <span className=\"daily-temperatures\">\r\n            {element.day.mintemp_c.toFixed()} /{\" \"}\r\n            {element.day.maxtemp_c.toFixed()} °C\r\n          </span>\r\n        </div>\r\n        <div className=\"col-md-2 col-2\">\r\n          <div className=\"expander-wrapper\">\r\n            <i className={isExpandedIcon}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={isExpanded ? \"row expanded-row\" : \"row\"}>\r\n        <div className=\"col-md\">\r\n          {\" \"}\r\n          <WeatherByDayTile\r\n            isExpanded={isExpanded}\r\n            element={element}\r\n            className=\"weather-by-hours\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherByDayDetails;\r\n","import React from \"react\";\r\nimport WeatherByDayDetails from \"./weather-by-day-details\";\r\n\r\nimport \"./weather-by-day.scss\";\r\n\r\nexport const WeatherByDay = (props) => {\r\n  var forecast = props.forecastDays;\r\n\r\n  if (!forecast) return <div>Loading ...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"tile-header\">Next 3 days:</h2>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md\">\r\n          <ul className=\"list-group-flush\">\r\n            {forecast.map((element) => (\r\n              <li className=\"list-group-item\" key={element.date}>\r\n                <WeatherByDayDetails element={element} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherByDay;\r\n","var UsAirQualityIndexTransformer = function (index) {\r\n  switch (index) {\r\n    case 1:\r\n      return \"Good\";\r\n    case 2:\r\n      return \"Moderate\";\r\n    case 3:\r\n      return \"Unhealthy for sensitive group\";\r\n    case 4:\r\n      return \"Unhealthy\";\r\n    case 5:\r\n      return \"Very Unhealthy\";\r\n    case 6:\r\n      return \"Hazardous\";\r\n    default:\r\n      return \"Info missing\";\r\n  }\r\n};\r\n\r\nexport default UsAirQualityIndexTransformer;\r\n","import React from \"react\";\r\n\r\n// set the defaults\r\nconst WeatherContext = React.createContext({\r\n  weatherType: \"sunny\",\r\n  setWeatherType: () => {}\r\n});\r\n\r\nexport default WeatherContext;\r\n","var WeatherType = function (weather) {\r\n\r\n  if (!weather) {\r\n    return \"n/a\";\r\n  }\r\n\r\n  weather = weather.toLowerCase();\r\n\r\n  if (weather.includes(\"rain\")) return \"rain\";\r\n  else if (weather.includes(\"sun\")) {\r\n    return \"sun\";\r\n  } else if (weather.includes(\"wind\")) {\r\n    return \"wind\";\r\n  } else if (weather.includes(\"fog\")) {\r\n    return \"fog\";\r\n  } else if (weather.includes(\"snow\")) {\r\n    return \"snow\";\r\n  } else if (weather.includes(\"wind\")) {\r\n    return \"wind\";\r\n  } else if (weather.includes(\"sleet\")) {\r\n    return \"sleet\";\r\n  } else if (weather.includes(\"cloud\") || weather.includes(\"overcast\")) {\r\n    return \"cloud\";\r\n  } else {\r\n    return \"n/a\";\r\n  }\r\n};\r\n\r\nexport default WeatherType;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport WeatherByDay from \"../weather-by-day/weather-by-day\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport UsAirQualityIndexTransformer from \"../../helpers/airQualityHelper\";\r\nimport \"./current-weather.scss\";\r\nimport WeatherContext from \"../../context\";\r\nimport WeatherType from \"../../helpers/weatherTypes\";\r\n\r\nexport const CurrentWeather = () => {\r\n  const locationBrowser = useLocation();\r\n  const searchParams = new URLSearchParams(locationBrowser.search);\r\n  var searchTermFromparam = searchParams.get(\"term\") ?? \"Sofia\";\r\n\r\n  var apiUrl = \"\";\r\n\r\n  if (searchTermFromparam !== \"\") {\r\n    apiUrl =\r\n      \"//api.weatherapi.com/v1/forecast.json?key=a074730b7e2a496cb3c110546221301&q=\" +\r\n      searchTermFromparam +\r\n      \"&days=3&aqi=yes&alerts=yes\";\r\n  }\r\n\r\n  const [weather, setWeather] = useState(null);\r\n  const { setWeatherType } = useContext(WeatherContext);\r\n\r\n  const getWeather = () => {\r\n    fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error && data.error.code === 1006) {\r\n          setWeather(undefined);\r\n        } else {\r\n          setWeather(data);\r\n        }\r\n      });\r\n  };\r\n\r\n  setWeatherType(WeatherType(weather?.current.condition.text));\r\n\r\n  var setIntervalValue = 100000;\r\n  useEffect(() => {\r\n    getWeather();\r\n\r\n    const interval = setInterval(() => {\r\n      getWeather();\r\n    }, setIntervalValue);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [apiUrl]);\r\n\r\n  if (typeof weather === \"undefined\")\r\n    return (\r\n      <div>\r\n        <div class=\"alert alert-secondary\" role=\"alert\">\r\n          No such location!\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (!weather) return <div>Loading ...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md\">\r\n            <div className=\"main-current-weather-info\">\r\n              <div className=\"location\">\r\n                {weather.location.name}, {weather.location.country}\r\n              </div>\r\n              <div className=\"temperature\">\r\n                {\" \"}\r\n                {Math.round(weather.current.temp_c)} °C\r\n              </div>\r\n              <div className=\"temperature-feels-like\">\r\n                Feels like {Math.round(weather.current.feelslike_c)} °C\r\n              </div>\r\n              <div className=\"weather-condition\">\r\n                <img\r\n                  src={weather.current.condition.icon}\r\n                  alt={weather.current.condition.text}\r\n                  className=\"weather-icon\"\r\n                ></img>\r\n                <span className=\"weather-condition-text\">\r\n                  {weather.current.condition.text}\r\n                </span>\r\n              </div>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                  <span className=\"label\">Air Quality: </span>\r\n                  <span className=\"value\">\r\n                    {\" \"}\r\n                    {UsAirQualityIndexTransformer(\r\n                      weather.current.air_quality[\"us-epa-index\"]\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <span className=\"label\">Humidity: </span>\r\n                  <span className=\"value\"> {weather.current.humidity}%</span>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <span className=\"label\">Wind: </span>\r\n                  <span className=\"value\">{weather.current.wind_kph} km/h</span>\r\n                </div>\r\n              </div>\r\n\r\n              <hr />\r\n              <div className=\"last-updated-info\">\r\n                Last updated: {weather.current.last_updated}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <WeatherByDay forecastDays={weather.forecast.forecastday} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport CurrentWeather from \"../current-weather/current-weather\";\r\nimport \"./search-by-location.scss\";\r\n\r\nexport const SearchByLocation = () => {\r\n  const locationBrowser = useLocation();\r\n  const history = useHistory();\r\n\r\n  const searchParams = new URLSearchParams(locationBrowser.search);\r\n  var searchTerm = searchParams.get(\"term\") ?? \"\";\r\n\r\n  const [location, setLocation] = useState(searchTerm);\r\n  const [isFormValid, setFormIsValid] = useState(true);\r\n\r\n  const changeLocation = (e) => {\r\n    setLocation(e.target.value);\r\n    if (e.target.value !== undefined && e.target.value.trim() !== \"\")\r\n      setFormIsValid(true);\r\n  };\r\n\r\n  const searchByLocation = (e) => {\r\n    e.preventDefault();\r\n    if (location === undefined || location === \"\") {\r\n      setFormIsValid(false);\r\n    } else {\r\n      setFormIsValid(true);\r\n      history.push(`?term=${location}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search-by-location-wrapper\">\r\n        <form onSubmit={searchByLocation}>\r\n          <div className=\"form-row\">\r\n            <div className=\"col-8\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-lg\"\r\n                placeholder=\"Search location\"\r\n                value={location}\r\n                onChange={changeLocation}\r\n              />\r\n              {!isFormValid && <span>Choose location</span>}\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <button type=\"submit\" className=\"btn btn-light btn-block btn-lg\">\r\n                Seach\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <CurrentWeather />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchByLocation;\r\n","import { React, useState } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport SearchByLocation from \"./components/search-location/search-by-location\";\r\nimport \"./App.scss\";\r\nimport \"./weatherCondition.scss\";\r\nimport WeatherContext from \"./context\";\r\n\r\nfunction App() {\r\n  \r\n  const [weatherType, setWeatherType] = useState(\"sunny\");\r\n  const value = { weatherType, setWeatherType };\r\n  var backgroundCssClass = \"wrapper \" + weatherType;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <WeatherContext.Provider value={value}>\r\n        <div className={backgroundCssClass}>\r\n          <header className=\"App-header\"></header>\r\n          <div className=\"container\">\r\n            <div className=\"app-wrapper\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <SearchByLocation />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </WeatherContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}